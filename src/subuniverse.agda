--File: subuniverse.agda
--Author: William DeMeo
--Date: 10 Jan 2020
--Updated: 11 Jan 2020


{-# OPTIONS --without-K --exact-split #-}

open import Level

open import basic
open algebra
open signature

module subuniverse {‚Ñì : Level} {S : signature} where

open import preliminaries

open import Data.Empty
open import Data.Unit.Base using (‚ä§)
open import Data.Product
open import Data.Sum using (_‚äé_; [_,_])
open import Function
--open import Relation.Nullary hiding (Irrelevant)
open import Relation.Unary
import Relation.Binary.PropositionalEquality as Eq
open Eq using (_‚â°_; refl)
open import Data.Product using (Œ£; _,_; ‚àÉ; Œ£-syntax; ‚àÉ-syntax)



OpClosed : (A : algebra S) (B : Pred ‚ü¶ A ‚üß·µ§ ‚Ñì) -> Set ‚Ñì
OpClosed A B = ‚àÄ{ùì∏ : ‚ü® S ‚ü©‚Çí}
               (args : Fin (‚ü® S ‚ü©‚Çê ùì∏) -> ‚ü¶ A ‚üß·µ§) 
  ->           ‚àÄ(i : Fin (‚ü® S ‚ü©‚Çê ùì∏)) -> (args i) ‚àà B
              -------------------------------------------
  ->           (A ‚ü¶ ùì∏ ‚üß) args ‚àà B

record IsSubuniverse {A : algebra S} : Set (suc ‚Ñì) where

  field
    sset : Pred ‚ü¶ A ‚üß·µ§ ‚Ñì
    closed : OpClosed A sset    


--subalgebra type
record subalgebra (A : algebra S) : Set (suc ‚Ñì) where

  field

    subuniv : Pred ‚ü¶ A ‚üß·µ§ ‚Ñì
    _‚ü¶_‚üß : (ùì∏ : ‚ü® S ‚ü©‚Çí)
      ->   (args : Fin (‚ü® S ‚ü©‚Çê ùì∏) -> ‚ü¶ A ‚üß·µ§)
      ->   ( ‚àÄ(i : Fin (‚ü® S ‚ü©‚Çê ùì∏)) -> (args i) ‚àà subuniv )
         --------------------------------------------------
      ->   Set ‚Ñì
      
    closed : OpClosed A subuniv



open IsSubuniverse

SubAlgebra : (A : algebra S)
  ->         (B : IsSubuniverse {A})
           --------------------------
  ->         (subalgebra A)

SubAlgebra A B =
  record
    {
    subuniv = sset B ;
    _‚ü¶_‚üß = Œª ùì∏ args p -> (sset B) ((A ‚ü¶ ùì∏ ‚üß) args) ;
    closed = closed B
    }



-- Recall, Theorem 4.32 of Bergman.
-- Let A and B be algebras of type S. Then the following hold:
--
--   (1) For every n-ary term t and homomorphism g: A ‚Äî> B, 
--       g(t·¥¨(a‚ÇÅ,...,a‚Çô)) = t·¥Æ(g(a‚ÇÅ),...,g(a‚Çô)).
--   (2) For every term t ‚àà T(X) and every Œ∏ ‚àà Con(A), 
--       a Œ∏ b => t(a) Œ∏ t(b).
--   (3) For every subset Y of A,
--       Sg(Y) = { t(a‚ÇÅ,...,a‚Çô) : t ‚àà T(X‚Çô), n < œâ, and a·µ¢ ‚àà Y, for i ‚â§ n}.
--
-- (1) is proved in the file free.agda
-- (2) is proved in the file quotient.agda
--
-- PROOF of (3).
--
-- (3) For every subset Y of A,
--     Sg(Y) = { t(a‚ÇÅ,...,a‚Çô) : t ‚àà T(X‚Çô), n < œâ, and a·µ¢ ‚àà Y, for i ‚â§ n}.
--
--  !!! TODO !!!
--
-- _‚äÜ_ : ‚àÄ {‚Ñì‚ÇÉ ‚Ñì ‚Ñì‚ÇÇ} {Œ£ : signature} {A : Algebra {‚Ñì} {‚Ñì‚ÇÇ} Œ£} ‚Üí
--         Congruence {‚Ñì‚ÇÉ} A ‚Üí Congruence {‚Ñì‚ÇÉ} A ‚Üí Set _
-- Œ¶ ‚äÜ Œ® = ‚àÄ s ‚Üí (rel Œ¶ s) ‚áí (rel Œ® s)


