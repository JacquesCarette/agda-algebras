TODO

-- Obs 2.0 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- composing homs gives a hom.
-- Obs 2.1 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Equalizer of homs is a subuniverse.
-- End Obs 2.1 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.2 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Homs are determined on generating sets (UAFST Ex 1.4.6.b)
-- End Obs 2.2 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.3 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- If A, B are fin, X generates 𝑨, then |Hom(𝑨, 𝑩)| ≤ |B|^|X|.
-- End Obs 2.3 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.4 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Factorization of homs.
-- If g ∈ Epi(𝑨, 𝑩), h ∈ Hom(𝑨, 𝑪), ker g ⊆ ker h, then
-- ∃ k ∈ Hom(𝑩, 𝑪), h = k ∘ g.
-- End Obs 2.4 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.5 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- CLAIM. Suppose Aᵢ ≤ 𝑨 for all i in some set I. Then ⋂ᵢ Aᵢ is a subuniverse of 𝑨.
-- End Obs 2.5 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.6 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Inductive version of Sg^𝑨.                                       
-- 𝑨 an algebra in S and A₀ a subset of A. Define, by recursion
-- on n, Aₙ as follows: If A₀ = ∅, then Aₙ = ∅ for all n<ω.
-- If A₀ ≠ ∅, then A_{n+1} = Aₙ ∪ { f a ∣ f ∈ F, a ∈ Fin(ρ f) -> Aₙ}.
-- Then the subuniverse of 𝑨 generated by A₀ is Sg^𝑨(A₀) = ⋃ₙ Aₙ.
-- End Obs 2.6 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.7 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Inductive version of Clo(F).                                     -- Let A be a set, F ⊆ Op(A):= ⋃ₙ A^Aⁿ a collection of ops on A.
-- Define F₀ := Proj(A) (the projections on A),
--        and ∀ 0 ≤ n < ω, let
-- F_{n+1} := Fₙ ∪ { f g | f ∈ F, g : Fin(ρ f) -> Fₙ ∩ (Fin(ρg) -> A) }.
--        Then Clo(F) = ⋃ₙ Fₙ.
-- End Obs 2.7 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


-- Obs 2.8 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Lift of a map h : X -> A extends uniquly to a hom 𝑻(X) -> 𝑨.     
-- (1) 𝑻 := 𝑻_σ(X) is generated by X.
-- (2) ∀ 𝑨 = ⟨A, F^𝑨⟩, ∀ g: X → A, ∃! hom h: 𝑻 → 𝑨,  h|_X = g.
-- End Obs 2.8 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.9 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Homs commute with terms.
-- Let t ∈ T_σ (X) be an n-ary term, t^𝑨 its interpretation in 𝑨,
-- so t^𝑨 a = t^𝑨 (a 0, a 1, ..., a (n-1)), for each
-- a : Fin(n) -> A. Similarly for 𝑩, have t^𝑩: (Fin(n) -> B) -> B. 
-- If g: 𝑨 → 𝑩 is a hom, then g ∘ a: Fin(n) → B is the n-tuple
-- whose i-th component is (g ∘ a) i = g(a i), and
-- g(t^𝑨 a) = t^𝑩(g ∘ a) holds.
-- End Obs 2.9 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


-- Obs 2.10 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Terms respect congruences
-- If θ ∈ Con 𝑨 and a, a': Fin(n) -> A are n-tuples over A, then
--        (a, a') ∈ θ  ⟹  (t^𝑨 a, t^𝑨 a') ∈ θ.
-- End Obs 2.10 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


-- Obs 2.11 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Subuniverse generation as image of terms.
-- If Y is a subset of A, then
-- Sg^{𝑨}(Y) = { t^𝑨 a : t ∈ T_σ(X_n), n ∈ ℕ, a: Fin(ρ t) -> Y }.
-- End Obs 2.11 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.12 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- CLAIM. ∀ 𝒦 (class of structures) each of 𝖲(𝒦), 𝖧(𝒦), 𝖯(𝒦),
--        𝕍(𝒦) satisfies exaxtly the same set of identities
--        as does 𝒦.
-- End Obs 2.12 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.13 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- 𝒦 ⊧ p ≈ q iff ∀ 𝑨 ∈ 𝒦, ∀ h ∈ Hom(𝑻(X_ω), 𝑨), h p^𝑨 = h q^𝑨`.
-- End Obs 2.13 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.14 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Let 𝒦 be a class of algebras, p ≈ q an equation. TFAE.
--   (1) 𝒦 ⊧ p ≈ q.
--   (2) (p, q) belongs to the congruence λ_𝒦 on 𝑻(X_ω).
--   (3) 𝑭_𝒦(X_ω) ⊧ p ≈ q.
--
-- End Obs 2.14 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

-- Obs 2.15 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Let 𝒦 be a class of algebras, p and q terms (say, n-ary),
-- Y a set, and y₁,..., yₙ distinct elements of Y.
-- Then 𝒦 ⊧ p ≈ q iff
--   p^{𝑭_𝒦(Y)}(y₁,..., yₙ) =  q^{𝑭_𝒦}(Y)(y₁, ..., yₙ).
-- In particular, 𝒦 ⊧ p ≈ q iff 𝑭_𝒦(Xₙ) ⊧ p ≈ q.
-- End Obs 2.15 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
--
--        (The converse of Obs 2.15 is **Birkhoff's HSP Theorem**.)
--
-- Obs 2.16 vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
-- Every  finitely  generated  variety  is  locally finite.
-- End Obs 2.16 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
--
-- The converse of the last theorem is false.  That is, ∃ loc fin varieties that are not finitely generated
-- (e.g., the variety of p-algebras; see UAFSt Cor. 4.55).
--

--------------
-- VARIETIES
--------------

--cf Def 1.10 of Bergman
--Let 𝓚 be a class of similar algebras. We write
--  H(𝓚) for the class of all homomorphic images of members of 𝓚;
--  S(𝓚) for the class of all algebras isomorphic to a subalgebra of a member of 𝓚;
--  P(𝓚) for the class of all algebras isomorphic to a direct product of members of 𝓚;
--We say that 𝓚 is closed under the formation of homomorphic images if H(𝓚) ⊆ 𝓚,
--and similarly for subalgebras and products.
--Notice that all three of these "class operators" are designed so that for any
--class 𝓚, H(𝓚), S(𝓚), P(𝓚) are closed under isomorphic images.
--On those rare occasions that we need it, we can write I(𝓚) for the class of algebras
--isomorphic to a member of 𝓚.
--Finally, we call 𝓚 a VARIETY if it is closed under each of H, S and P.

-- contains : {A : Set} -> (L : List A) -> A -> Prp
-- contains [] a = ⊥
-- contains (h :: tail) a = (h ≡ a) ⋁ (contains tail a)

--data class-of-algebras : Set where

-- --Hom-closed
-- H-closed : (𝓚 : Pred (algebra S)) -> Prp
-- H-closed 𝓚 = ∀ (A : algebra S)  ->  (𝓚 A)
--   ->     (∃ θ : Con A)   ->   (∃ C : algebra S)
--   ->     (𝓚 C) ∧ (A / θ ≅ C)

-- --Sub-closed
-- -- SC : (𝓚 : List (algebra S)) -> Prp
-- -- SC 𝓚 = ∀(A : algebra S) -> (contains 𝓚 A)
-- --   -> (B : subalgebra A) -> (∃ C : algebra S)
-- --   -> (contains 𝓚 C) ∧ B ≃ C
















--====================================================
------------------------------------------------------
-- OLD STUFF
--
-- open import Level
-- open import basic
-- open import subuniverse
-- open algebra
-- open signature
-- open import preliminaries
-- open import Relation.Unary
-- open import Relation.Binary.Core
-- import Relation.Binary.PropositionalEquality as Eq
-- open Eq using (_≡_; refl; cong; trans; sym)
-- open Eq.≡-Reasoning
-- open import Data.Product using (Σ; _,_; ∃; Σ-syntax; ∃-syntax)
