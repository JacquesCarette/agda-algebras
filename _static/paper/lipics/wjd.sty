% ---------------------------------------------------------
% Some useful commands for typesetting articles with LaTeX.
% ---------------------------------------------------------

\ProvidesPackage{wjd}

%% \requirepackage[utf8x]{inputenc}

%% \requirepackage[mathletters,autogenerated]{ucs}

\RequirePackage{xspace}

%% \RequirePackage{ifxetex, ifluatex, xifthen, xcolor, polytable, etoolbox, calc, environ, xparse, xkeyval}

%% Culprit!
%% \\[\AgdaEmptyExtraSkip]%
\newcommand\cpad{-6pt}
\newcommand\ccpad{\\[-6pt]}
% ----------------------------------------------------------------------
% Options
%% \DeclareOption{bw}   {\newcommand{\AgdaColourScheme}{bw}}
%% ---------------------------------------------------------------------------
%% for compatibility with latex code generated by pandoc from markdown files
\providecommand{\tightlist}{%
  \setlength{\itemsep}{0pt}\setlength{\parskip}{0pt}}
\newenvironment{Shaded}{}{}
\newenvironment{Highlighting}[1][]{}{}
\providecommand{\PreprocessorTok}[1]{%
  \{-\# OPTIONS --without-K --exact-split --allow-unsolved-metas \#-\}}

\newcommand\agdaualib{\href{https://ualib.gitlab.io}{Agda UALib}\xspace}
\newcommand\ualib{\href{https://ualib.gitlab.io}{UALib}\xspace}
\newcommand\ualibdotorg{\href{https://ualib.gitlab.io}{\texttt{https://ualib.org}}\xspace}

%% \newcommand\ualibdocs{\href{https://ualib.gitlab.io}{https://ualib.gitlab.io}\xspace}
\newcommand\ualibrepo{\href{https://gitlab.com/ualib/ualib.gitlab.io}{\texttt{https://gitlab.com/ualib/ualib.gitlab.io}}\xspace}
\newcommand\TypeTopology{\href{https://github.com/martinescardo/TypeTopology}{Type Topology}\xspace}
\newcommand\typetopology{\href{https://github.com/martinescardo/TypeTopology}{Type Topology}\xspace}
\newcommand\ufcourse{\href{https://www.cs.bham.ac.uk/~mhe/HoTT-UF-in-Agda-Lecture-Notes/index.html}{Introduction to Univalent Foundations of Mathematics with Agda}\xspace}
\newcommand\MGSnineteen{\href{http://events.cs.bham.ac.uk/mgs2019/}{MGS 2019}\xspace}

\newcommand\ualibPrelude{\href{https://ualib.gitlab.io/UALib.Prelude.html}{UALib.Prelude}\xspace}
\newcommand\universes{\href{https://ualib.gitlab.io/universes.html}{universes}\xspace}
\newcommand\ualibPreface{\href{https://ualib.gitlab.io/UALib.Preface.html}{UALib.Preface}\xspace}
\newcommand\ualibAlgebras{\href{https://ualib.gitlab.io/UALib.Algebras.html}{UALib.Algebras}\xspace}
\newcommand\ualibRelations{\href{https://ualib.gitlab.io/UALib.Relations.html}{UALib.Relations}\xspace}
\newcommand\ualibHomomorphisms{\href{https://ualib.gitlab.io/UALib.Homomorphisms.html}{UALib.Homomorphisms}\xspace}
\newcommand\ualibTerms{\href{https://ualib.gitlab.io/UALib.Terms.html}{UALib.Terms}\xspace}
\newcommand\ualibSubalgebras{\href{https://ualib.gitlab.io/UALib.Subalgebras.html}{UALib.Subalgebras}\xspace}
\newcommand\ualibVarieties{\href{https://ualib.gitlab.io/UALib.Varieties.html}{UALib.Varieties}\xspace}
\newcommand\ualibBirkhoff{\href{https://ualib.gitlab.io/UALib.Birkhoff.html}{UALib.Birkhoff}\xspace}

%% %% for backward compatibility with old module names:
\newcommand\preludemodule{\ualibPrelude}
\newcommand\basicmodule{\ualibAlgebras}
\newcommand\congruencesmodule{\ualibRelations}
\newcommand\homomorphismsmodule{\ualibHomomorphisms}
\newcommand\termsmodule{\ualibTerms}
\newcommand\subuniversesmodule{\ualibSubalgebras}
\newcommand\closuremodule{\ualibVarieties}
\newcommand\birkhoffmodule{\ualibBirkhoff}

\newcommand\ab[1]{\AgdaBound{#1}}
%% \newcommand\af[1]{\AgdaFunction{#1}}
%% \newcommand{\alg}[1]{\ensuremath{\mathbf{#1}}}  % algebraic structures
%% \newcommand{\var}[1]{\ensuremath{\mathscr{#1}}}  % algebraic structures

\newcommand{\agda}{\href{https://wiki.portal.chalmers.se/agda/pmwiki.php}{Agda}\xspace}

\newcommand{\mhe}{\href{https://www.cs.bham.ac.uk/~mhe/}{MHE}\xspace}
\newcommand{\MHE}{\href{https://www.cs.bham.ac.uk/~mhe/}{Martin H√∂tzel Escardo}\xspace}
\newcommand{\mltt}{\href{https://ncatlab.org/nlab/show/Martin-L\%C3\%B6f+dependent+type+theory}{MLTT}\xspace}
\newcommand{\MLTT}{\href{https://ncatlab.org/nlab/show/Martin-L\%C3\%B6f+dependent+type+theory}{Martin-L√∂f Type Theory}\xspace}
\newcommand{\AgdaStandardLibrary}{\href{https://agda.github.io/agda-stdlib/}{Agda Standard Library}\xspace}
\newcommand{\agdastdlib}{\href{https://agda.github.io/agda-stdlib/}{Agda Standard Library}\xspace}
\newcommand{\axiomk}{\href{https://ncatlab.org/nlab/show/axiom+K+\%28type+theory\%29}{Streicher's K axiom}\xspace}
\newcommand{\agdarefk}{\href{https://agda.readthedocs.io/en/v2.6.1/language/without-k.html}{section on axiom K}\xspace}
\newcommand{\agdaref}{\href{https://agda.readthedocs.io/en/v2.6.1/language}{Agda Language Reference}\xspace}
\newcommand{\patternmatching}{\href{https://agda.readthedocs.io/en/v2.6.1/tools/command-line-options.html\#pattern-matching-and-equality}{Pattern matching and equality section}\xspace}
\newcommand{\agdatools}{\href{https://agda.readthedocs.io/en/v2.6.1/tools/}{Agda Tools}\xspace}
\newcommand{\agdatwomode}{\href{https://agda.readthedocs.io/en/v2.6.0.1/tools/emacs-mode.html}{agda2-mode}\xspace}
\newcommand{\hottbook}{\href{https://homotopytypetheory.org/book/}{HoTT book}}

%% Agda and pandoc macros and fixes
\newcommand\signatureOV{\AgdaFunction{Signature}\AgdaSpace{}\AgdaBound{ùìû}\AgdaSpace{}\AgdaBound{ùì•}}
\newcommand\algebraUS{\AgdaFunction{Algebra}\AgdaSpace{}\AgdaBound{ùì§}\AgdaSpace{}\AgdaBound{ùëÜ}\xspace}
\newcommand\algebraOVUS{\AgdaFunction{Algebra}\AgdaSpace{}\AgdaBound{ùì§}\AgdaSpace{}\AgdaSymbol{\{}\AgdaBound{ùìû}\AgdaSymbol{\}\{}\AgdaBound{ùì•}\AgdaSymbol{\}}\AgdaSpace{}\AgdaBound{ùëÜ}}

\newcommand\sP[1]{\hskip#1pt}

\newcommand\KeywordTok[1]{\AgdaKeyword{#1}}
\newcommand\OtherTok[1]{\AgdaSymbol{#1}}
%% \newcommand\NormalTok[1]{\AgdaSymbol{#1}}
\newcommand\DataTypeTok[1]{\AgdaDatatype{#1}}
\newcommand\lzero{\AgdaKeyword{lzero}\AgdaSpace{}}
\newcommand\lsuc{\AgdaKeyword{lsuc}\AgdaSpace{}}
\newcommand\NormalTok[1]{\AgdaCatchallClause{#1}}
\newcommand\CommentTok[1]{\AgdaComment{#1}}
\newcommand\DecValTok[1]{\AgdaNumber{#1}}
\usepackage{ifthen}

% Insert extra space before some tokens.
\DeclareRobustCommand{\OtherTok}[1]{%
  \ifthenelse{ \equal{#1}{‚Üí} }{\ensuremath{\rightarrow}}{
  \ifthenelse{ \equal{#1}{_} }{\AgdaUnderscore}{#1}}
}

